

# For some reason flake8 does not support pyproject.toml, so configure here
[flake8]
# Use the more relaxed max line length permitted in PEP8.
max-line-length = 99
# This ignore is required by black.
extend-ignore = E203
extend-exclude =
    venv
# flake8-bugbear config.
# This argument is not needed if not using Typer as a dependency.
extend-immutable-calls =
    Argument

[gh]
python =
    3.12 = py312,py312-runtime
    3.10 = py310,py310-runtime

[tox]
# These are the default environments that will be run
#   when `tox` is run without arguments.
skipsdist = true
envlist =
#    fmt-check  FIXME issue 129
#    lint  FIXME issue 130
#    type-check   FIXME issue 131
#   py{310,312}  TODO enable 3.12 when distutils is fixed
#   py{310,312}-runtime  TODO enable 3.12 when distutils is fixed
    py{310}
    py{310}-runtime
skip_missing_interpreters = true

# Activate isolated build environment. tox will use a virtual environment
# to build a source distribution from the source tree. For build tools and
# arguments use the pyproject.toml file as specified in PEP-517 and PEP-518.
isolated_build = true

[testenv]
setenv =
    AXELERA_FRAMEWORK={tox_root}
deps =
    -r{tox_root}/requirements.unittests.txt
    -fwheels_for_tests
    axelera.types
    axelera.runtime
commands = {envpython} -bb -m pytest  --cov=. --cov-report=html --cov-report=term {posargs}


[testenv:py{310,312}-runtime]
deps =
    -r{tox_root}/requirements.runtime.txt
    -fwheels_for_tests
    axelera.types
    axelera.runtime
commands = {envpython} -bb -m pytest --cov=. --cov-report=html --cov-report=term {posargs}

[testenv:type-check]
deps =
    # It is important to install the main project requirements, as some
    # packages many contain inline type hints (PEP 561) that mypy will use.
    -r{tox_root}/requirements.unittests.txt
commands =
    mypy axelera ax_datasets ax_models tests

[testenv:lint]
skip_install = true
deps =
    -r{tox_root}/requirements.unittests.txt
commands =
    flake8

[testenv:fmt]
skip_install = true
deps =
    -r{tox_root}/requirements.unittests.txt
commands =
    isort --profile=black .
    black .

[testenv:fmt-check]
skip_install = true
deps =
    -r{tox_root}/requirements.unittests.txt
commands =
    isort --check  --profile=black .
    black --check .
