axelera-model-format: 1.0.0

name: ssd-mobilenetv2-coco-poc-onnx

description: SSD-Mobilenetv2 (COCO) trained from tensorflow2 and converted as ONNX, manually edited to PoC. We will fully support it later.
# converted by "tf2onnx.convert --saved-model ./ssd_mobilenet_v2 --output tf2_ssd-mbv2.onnx --opset 12"

pipeline:
  - ssd-mobilenetv2-coco-poc-onnx:
      template_path: $AXELERA_FRAMEWORK/pipeline-template/ssd-tensorflow.yaml
      postprocess:
        - decode-ssd-mobilenet:
            conf_threshold: 0.3
            eval:
              max_nms_boxes: 30000
              conf_threshold: 0.016
              nms_iou_threshold: 0.5
              nms_class_agnostic: True
              nms_top_k: 200

models:
  ssd-mobilenetv2-coco-poc-onnx:
    class: AxONNXModel
    class_path: $AXELERA_FRAMEWORK/ax_models/base_onnx.py
    weight_path: weights/extracted_ssd_mbnetv2_final.onnx
    weight_url: https://d1o2y3tc25j7ge.cloudfront.net/artifacts/model_cards/weights/object_detection/manual_clean/extracted_ssd_mbnetv2_final.onnx
    weight_md5: c505dfcee9a8f47b63eaa1879c4bbea0
    task_category: ObjectDetection
    input_tensor_layout: NCHW
    input_tensor_shape: [1, 3, 300, 300]
    input_color_format: RGB
    num_classes: 90
    dataset: CocoDataset-COCO2017
    extra_kwargs:
      compilation_config:
        backend_config:
          tiling_depth: 6

datasets:
  CocoDataset-COCO2017:
    class: ObjDataAdaptor
    class_path: $AXELERA_FRAMEWORK/ax_datasets/objdataadapter.py
    data_dir_name: coco
    labels_path: $AXELERA_FRAMEWORK/ax_datasets/labels/coco90.names
    # If using a custom dataset, comment out download year and add either
    # repr_imgs or cal_data for calibration and add val_data for validation.
    # You can use your existing training dataset as cal_data
    download_year: 2017
    repr_imgs_dir_path: $AXELERA_FRAMEWORK/data/coco2017_400_b680128
    repr_imgs_url: https://d1o2y3tc25j7ge.cloudfront.net/artifacts/data/coco/coco2017_repr400.zip
    repr_imgs_md5: b680128512392586e3c86b670886d9fa
    # cal_data: relative/path/to/your/cal_custom.json or dir with darknet label txt files
    # val_data: relative/path/to/your/val_custom.json or dir with darknet label txt files
    format: coco91 # the decoded class follows 0-indexed COCO-91 labels
