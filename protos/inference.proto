// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package InferenceServer;

// The Inference service definition.
service Inference {
  // Sends an request to perform inference

  rpc Infer(InferenceRequest) returns (stream Inferenceresult) {}

  rpc StreamInit(InitInferenceRequest) returns (InitInferenceResponse) {}

  rpc StreamInfer(stream StreamInferenceRequest)
      returns (stream Inferenceresult) {}
}

message InitInferenceRequest {
  string network = 1;
}

message InitInferenceResponse {
  string status = 1;
}

message StreamInferenceRequest {
  Image image = 1;
}

// The request message containing the input url
message InferenceRequest {
  string network = 1;
  string input = 2;
}

//  Obejct detection defintion
message ObjectMeta {
  bytes boxes = 1;    // 1D array of float32 (4 entries per box)
  bytes scores = 2;   // 1D array of float32 (1 entry per box)
  bytes classes = 3;  // 1D array of int32 (1 entry per box)
}

message Scores {
  repeated bytes scores = 1;
}

message Boxes {
  repeated bytes boxes = 1;
}

message Classes {
  repeated bytes classes = 1;
}

message Classifier {
  repeated Scores scores = 1;
  repeated Boxes boxes = 2;
  repeated Classes classes = 3;
}

message Image {
  int32 width = 1;
  int32 height = 2;
  int32 channels = 3;
  bytes image = 4;
}

message Inferenceresult {
  optional ObjectMeta obj = 1;
  optional Classifier classifier = 2;
  optional Image image = 3;
}
